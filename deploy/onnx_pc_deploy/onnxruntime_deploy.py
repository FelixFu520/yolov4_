import onnxruntime as ort

from PIL import Image
import matplotlib.pyplot as plt

import numpy as np
import os


# ------------ load image
# img = Image.open("street.jpg")
img = Image.open("test.png")
img = img.resize((416, 416))
img = np.array(img, dtype = np.float32)
img /= 255.0
img = img.transpose((2, 0, 1))
img = np.expand_dims(img, axis=0)
# img = img.astype(np.float32)

# ------------ load models
sess = ort.InferenceSession("../models/yolov4.onnx")

# ------------ check input & output
input_name = sess.get_inputs()[0].name
print("Input name  :", input_name)
input_shape = sess.get_inputs()[0].shape
print("Input shape :", input_shape)
input_type = sess.get_inputs()[0].type
print("Input type  :", input_type)

output_name0 = sess.get_outputs()[0].name
output_name1 = sess.get_outputs()[1].name
output_name2 = sess.get_outputs()[2].name
print("Output name0  :", output_name0)
print("Output name1  :", output_name1)
print("Output name2  :", output_name2)

print("Output shape0 :", sess.get_outputs()[0].shape)
print("Output shape1 :", sess.get_outputs()[1].shape)
print("Output shape2 :", sess.get_outputs()[2].shape)
output_type = sess.get_outputs()[0].type
print("Output type  :", output_type)

output_name = "output_0"
# ------------ run
result = sess.run([output_name0, output_name1, output_name2], {input_name: img})
print(type(result))
print(np.array(result[0]).shape)
print(np.array(result[1]).shape)
print(np.array(result[2]).shape)
print(result[0])

import time
# start = time.time()
# for _ in range(100):
#     result = sess.run([output_name], {input_name: img})
# end = time.time()
# print("CPU infer time:", str(end - start))


"""
root@e9609ff337d0:~/yolov4_/deploy/onnx_pc_deploy# python onnxruntime_deploy.py 
Input name  : input_0
Input shape : [1, 3, 416, 416]
Input type  : tensor(float)
Output name0  : output_0
Output name1  : output_1
Output name2  : output_2
Output shape0 : [1, 255, 13, 13]
Output shape1 : [1, 255, 26, 26]
Output shape2 : [1, 255, 52, 52]
Output type  : tensor(float)
<class 'list'>
(1, 255, 13, 13)
(1, 255, 26, 26)
(1, 255, 52, 52)
[[[[ 1.71107686e+00  1.05994828e-01  1.21952467e-01 ...  1.66811645e-01
     8.10539305e-01 -2.15740991e+00]
   [ 1.43413627e+00  1.66530430e-01 -4.44611311e-02 ...  4.91555989e-01
     4.65471148e-01 -1.25718379e+00]
   [ 1.51716518e+00  7.11023390e-01 -4.32298928e-01 ... -1.81126505e-01
    -1.73581749e-01 -1.39611697e+00]
   ...
   [ 9.69913960e-01 -5.51609814e-01 -7.62566626e-01 ...  6.29617035e-01
     1.29380733e-01 -8.68547499e-01]
   [ 9.54011083e-01 -5.65525293e-01 -1.86200500e-01 ...  4.16366577e-01
     5.18402696e-01 -9.52372372e-01]
   [ 1.80589271e+00 -1.37245327e-01 -2.63637528e-02 ... -1.11094154e-01
     2.33302936e-02 -2.11296940e+00]]

  [[ 1.77881896e+00  1.26804209e+00  8.43694508e-01 ...  1.43788421e+00
     1.55852902e+00  1.81498742e+00]
   [-2.47735053e-01 -2.68946737e-01 -5.51583230e-01 ... -4.46503967e-01
    -8.08446050e-01 -2.29611665e-01]
   [ 3.71343978e-02  2.25021958e-01  8.49292725e-02 ... -1.30119905e-01
    -1.32094264e-01 -1.63736701e-01]
   ...
   [-2.83288956e-01 -3.80135447e-01 -2.78934509e-01 ... -5.14851622e-02
    -1.16033569e-01  2.06214592e-01]
   [-5.49991846e-01 -3.07209641e-01 -5.72451890e-01 ...  3.40691395e-02
     9.06842351e-02 -3.49540532e-01]
   [-2.13156199e+00 -1.45453322e+00 -1.09009314e+00 ... -8.51583481e-01
    -1.14771235e+00 -2.00949621e+00]]

  [[-3.56029600e-01 -2.39378244e-01  2.58460581e-01 ...  1.05189741e-01
    -4.89531308e-01 -7.27301121e-01]
   [-8.85842204e-01 -3.06730211e-01  1.66967750e-01 ... -7.20515922e-02
    -4.92642850e-01 -9.43362117e-01]
   [-8.28921437e-01 -2.28263587e-01  1.25259459e-01 ... -1.16110407e-01
    -3.18751454e-01 -7.28587747e-01]
   ...
   [-1.09618282e+00 -5.18949032e-01  8.82330537e-03 ...  1.74807906e-02
    -4.03202802e-01 -1.08277130e+00]
   [-1.17510319e+00 -5.43199182e-01  7.07917213e-02 ...  6.34857416e-02
    -4.81399089e-01 -1.09586394e+00]
   [-5.77714086e-01 -4.34799522e-01  1.24021202e-01 ...  1.04310974e-01
    -4.40701157e-01 -6.56059980e-01]]

  ...

  [[-8.99050140e+00 -8.12831879e+00 -8.01509476e+00 ... -1.10026979e+01
    -1.07683268e+01 -1.09195814e+01]
   [-8.86810493e+00 -8.62467861e+00 -8.30544949e+00 ... -9.75361633e+00
    -9.83685493e+00 -1.01260605e+01]
   [-8.39101124e+00 -8.18587685e+00 -7.92966318e+00 ... -8.69770813e+00
    -8.10864353e+00 -8.94747066e+00]
   ...
   [-6.18262529e+00 -6.51856327e+00 -6.89981937e+00 ... -7.30642986e+00
    -6.24965763e+00 -6.08001423e+00]
   [-5.55598497e+00 -5.96304512e+00 -6.03568649e+00 ... -6.60362816e+00
    -5.79867935e+00 -5.70450735e+00]
   [-6.16426182e+00 -6.15187931e+00 -6.35301971e+00 ... -6.63965559e+00
    -5.80906057e+00 -6.40670681e+00]]

  [[-7.64094591e+00 -6.06950426e+00 -6.28577471e+00 ... -8.12738800e+00
    -7.34327507e+00 -7.25491810e+00]
   [-6.90446138e+00 -6.39659595e+00 -6.07302618e+00 ... -6.89090061e+00
    -6.50625420e+00 -6.25836945e+00]
   [-6.58748341e+00 -6.64008045e+00 -5.83693886e+00 ... -6.16333103e+00
    -5.73330975e+00 -5.49700212e+00]
   ...
   [-6.00327921e+00 -6.33877516e+00 -6.64012432e+00 ... -5.96981001e+00
    -5.30067635e+00 -5.17539930e+00]
   [-5.76454020e+00 -6.04372025e+00 -6.25750017e+00 ... -5.76149130e+00
    -5.06723690e+00 -4.99453640e+00]
   [-6.29552889e+00 -6.03514767e+00 -6.15993977e+00 ... -5.45936441e+00
    -4.80271339e+00 -5.39485073e+00]]

  [[-9.25409889e+00 -7.55143118e+00 -6.85510826e+00 ... -9.67013359e+00
    -9.41606903e+00 -1.08959579e+01]
   [-9.01073360e+00 -7.93729973e+00 -7.04004145e+00 ... -8.14734364e+00
    -8.60061836e+00 -9.34602833e+00]
   [-8.48384666e+00 -7.74842930e+00 -6.38951445e+00 ... -6.50799131e+00
    -6.64602995e+00 -7.59545469e+00]
   ...
   [-6.01430273e+00 -6.00162268e+00 -5.73135471e+00 ... -4.72299671e+00
    -4.18900204e+00 -4.25934458e+00]
   [-5.90230942e+00 -5.80544186e+00 -5.48225021e+00 ... -4.94463968e+00
    -4.22927189e+00 -4.45962191e+00]
   [-6.64483643e+00 -6.00335407e+00 -5.44435978e+00 ... -5.48080635e+00
    -4.77177334e+00 -5.76087475e+00]]]]
root@e9609ff337d0:~/yolov4_/deploy/onnx_pc_deploy# 

"""